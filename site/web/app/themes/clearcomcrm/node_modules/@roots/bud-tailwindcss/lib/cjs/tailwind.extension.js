"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BudTailwindCssExtension = void 0;
class BudTailwindCssExtension {
    /**
     * Extension boot
     *
     * @param app - Framework
     * @returns void
     */
    static async boot(app, logger) {
        try {
            const { default: tailwindcss } = await Promise.resolve().then(() => __importStar(require('tailwindcss')));
            const { default: nesting } = await Promise.resolve().then(() => __importStar(require('tailwindcss/nesting')));
            app.postcss.setPlugins({
                'postcss-import': app.postcss.get('postcss-import'),
                'tailwindcss-nesting': [nesting],
                tailwindcss: [tailwindcss],
                'postcss-preset-env': app.postcss.get('postcss-preset-env'),
            });
            logger.success('postcss has been configured for tailwindcss');
        }
        catch (message) {
            logger.warn({ message });
        }
    }
}
exports.BudTailwindCssExtension = BudTailwindCssExtension;
/**
 * Extension name
 *
 * @public
 */
BudTailwindCssExtension.label = '@roots/bud-tailwindcss';
